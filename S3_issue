NotADirectoryError                        Traceback (most recent call last)
Cell In[3], line 34
     31         # Télécharger le fichier
     32         s3_client.download_file(bucket_name, obj['Key'], local_file_path)
---> 34 download_directory(MODEL_BUCKET, 'DIMITRI/csv_vent_mensuel', 'data_vents_12_25')

Cell In[3], line 32, in download_directory(bucket_name, prefix, local_path)
     29 os.makedirs(os.path.dirname(local_file_path), exist_ok=True)
     31 # Télécharger le fichier
---> 32 s3_client.download_file(bucket_name, obj['Key'], local_file_path)

File ~/.local/lib/python3.11/site-packages/boto3/s3/inject.py:192, in download_file(self, Bucket, Key, Filename, ExtraArgs, Callback, Config)
    157 """Download an S3 object to a file.
    158 
    159 Usage::
   (...)
    189     transfer.
    190 """
    191 with S3Transfer(self, Config) as transfer:
--> 192     return transfer.download_file(
    193         bucket=Bucket,
    194         key=Key,
    195         filename=Filename,
    196         extra_args=ExtraArgs,
    197         callback=Callback,
    198     )

File ~/.local/lib/python3.11/site-packages/boto3/s3/transfer.py:406, in S3Transfer.download_file(self, bucket, key, filename, extra_args, callback)
    402 future = self._manager.download(
    403     bucket, key, filename, extra_args, subscribers
    404 )
    405 try:
--> 406     future.result()
    407 # This is for backwards compatibility where when retries are
    408 # exceeded we need to throw the same error from boto3 instead of
    409 # s3transfer's built in RetriesExceededError as current users are
    410 # catching the boto3 one instead of the s3transfer exception to do
    411 # their own retries.
    412 except S3TransferRetriesExceededError as e:

File ~/.local/lib/python3.11/site-packages/s3transfer/futures.py:103, in TransferFuture.result(self)
     98 def result(self):
     99     try:
    100         # Usually the result() method blocks until the transfer is done,
    101         # however if a KeyboardInterrupt is raised we want want to exit
    102         # out of this and propagate the exception.
--> 103         return self._coordinator.result()
    104     except KeyboardInterrupt as e:
    105         self.cancel()

File ~/.local/lib/python3.11/site-packages/s3transfer/futures.py:264, in TransferCoordinator.result(self)
    261 # Once done waiting, raise an exception if present or return the
    262 # final result.
    263 if self._exception:
--> 264     raise self._exception
    265 return self._result

File ~/.local/lib/python3.11/site-packages/s3transfer/tasks.py:135, in Task.__call__(self)
    131     # If the task is not done (really only if some other related
    132     # task to the TransferFuture had failed) then execute the task's
    133     # main() method.
    134     if not self._transfer_coordinator.done():
--> 135         return self._execute_main(kwargs)
    136 except Exception as e:
    137     self._log_and_set_exception(e)

File ~/.local/lib/python3.11/site-packages/s3transfer/tasks.py:158, in Task._execute_main(self, kwargs)
    155 # Log what is about to be executed.
    156 logger.debug(f"Executing task {self} with kwargs {kwargs_to_display}")
--> 158 return_value = self._main(**kwargs)
    159 # If the task is the final task, then set the TransferFuture's
    160 # value to the return value from main().
    161 if self._is_final:

File ~/.local/lib/python3.11/site-packages/s3transfer/download.py:671, in IORenameFileTask._main(self, fileobj, final_filename, osutil)
    669 def _main(self, fileobj, final_filename, osutil):
    670     fileobj.close()
--> 671     osutil.rename_file(fileobj.name, final_filename)

File ~/.local/lib/python3.11/site-packages/s3transfer/utils.py:291, in OSUtils.rename_file(self, current_filename, new_filename)
    290 def rename_file(self, current_filename, new_filename):
--> 291     rename_file(current_filename, new_filename)

NotADirectoryError: [Errno 20] Not a directory: 'data_vents_12_25/DIMITRI/csv_vent_mensuel/.7aD1EA0e' -> 'data_vents_12_25/DIMITRI/csv_vent_mensuel/'
