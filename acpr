# 1) Récupérer les meilleurs hyperparamètres + seuil optimisé (issus de ta grid)
best_row       = results_df.sort_values("best_f1", ascending=False).iloc[0]
best_params    = best_row["params"]
best_threshold = float(best_row["best_threshold"])
print("Best params:", best_params, "| Best threshold:", best_threshold)

# 2) Recréer le pipeline et y injecter ces hyperparamètres
final_pipe = Pipeline([
    ("smote", SMOTE(random_state=42)),
    ("under", RandomUnderSampler(random_state=42)),
    ("clf", CatBoostClassifier(verbose=0, random_state=42))
])
final_pipe.set_params(**best_params)

# 3) Entraîner le modèle FINAL sur train+val (mêmes features que pendant la grid)
X_train_final = pd.concat([X_train_sel, X_val_sel], axis=0)
y_train_final = pd.concat([y_train_sel, y_val_sel], axis=0)
final_pipe.fit(X_train_final, y_train_final)

# 4) (option) Évaluer sur test avec le seuil validé
y_test_proba = final_pipe.predict_proba(X_test_final)[:, 1]
y_test_pred  = (y_test_proba >= best_threshold).astype(int)

print(f"AUC test  : {roc_auc_score(y_test_final, y_test_proba):.4f}")
print(f"F1  test  : {f1_score(y_test_final, y_test_pred):.4f}")
