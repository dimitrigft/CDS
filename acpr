import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split, StratifiedGroupKFold
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, roc_auc_score, f1_score, confusion_matrix

# --- 1. Pr√©paration des donn√©es ---
df = df_all_trim_final.copy()
df["CONTRAT"] = df["CONTRAT"].astype(str)
df["SINISTRE_BINARY"] = df["SINISTRE"].astype(int)

# Stratification par contrat
contracts_df = df.groupby("CONTRAT").agg({"SINISTRE_BINARY": "max"}).reset_index()

train_val_ids, test_ids = train_test_split(
    contracts_df["CONTRAT"], test_size=0.2,
    stratify=contracts_df["SINISTRE_BINARY"], random_state=42
)

df_train_val = df[df["CONTRAT"].isin(train_val_ids)].copy()
df_test = df[df["CONTRAT"].isin(test_ids)].copy()

# --- 2. Variables explicatives ---
X = df_train_val.drop(columns=["SINISTRE", "SINISTRE_BINARY", "TRIM_YEAR", "CONTRAT", "INSEE_COM", "NOMBRE_SINISTRES"])
X = X.loc[:, ~X.columns.duplicated()]
X = X.astype(np.float32)
y = df_train_val["SINISTRE_BINARY"].astype(np.int32)

X_test = df_test.drop(columns=["SINISTRE", "SINISTRE_BINARY", "TRIM_YEAR", "CONTRAT", "INSEE_COM", "NOMBRE_SINISTRES"])
X_test = X_test.loc[:, ~X_test.columns.duplicated()]
X_test = X_test.astype(np.float32)
y_test = df_test["SINISTRE_BINARY"].astype(np.int32)

# --- 3. Mod√®le de r√©gression logistique ---
model = LogisticRegression(
    penalty='l2',
    solver='liblinear',
    class_weight='balanced',  # pour compenser le d√©s√©quilibre
    random_state=42
)

model.fit(X, y)

# --- 4. √âvaluation sur le jeu de test ---
y_pred = model.predict(X_test)
y_proba = model.predict_proba(X_test)[:, 1]

print("üìä √âvaluation sur le TEST (R√©gression logistique simple) :")
print("Confusion Matrix :")
print(confusion_matrix(y_test, y_pred))
print("\nClassification Report :")
print(classification_report(y_test, y_pred, digits=4))
print(f"AUC : {roc_auc_score(y_test, y_proba):.4f}")
print(f"F1-score : {f1_score(y_test, y_pred):.4f}")
